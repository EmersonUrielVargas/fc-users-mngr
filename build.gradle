plugins {
    id 'org.springframework.boot' version '3.4.5'
    id 'io.spring.dependency-management' version '1.0.13.RELEASE'
    id 'java'
    id 'jacoco'
}

group = 'com.food-court.users'
version = '0.0.1-SNAPSHOT'
sourceCompatibility = '21'

configurations {
	compileOnly {
		extendsFrom annotationProcessor
	}
}

repositories {
	mavenCentral()
}

ext {
	springBootVersion = "3.4.5"
	mapstructVersion = "1.6.3"
	lombokVersion = "1.18.34"
	lombokMapstructBindingVersion = "0.2.0"
	mySqlConnectorVersion = "8.0.33"
	feignVersion = "4.2.1"
	openApiVersion = "2.8.8"
	jjwtApiVersion = "0.12.6"
}

dependencies {
	implementation "org.springframework.boot:spring-boot-starter-data-jpa:${springBootVersion}"
	implementation "org.springframework.boot:spring-boot-starter-validation:${springBootVersion}"
	implementation "org.springframework.boot:spring-boot-starter-web:${springBootVersion}"
	developmentOnly "org.springframework.boot:spring-boot-devtools:${springBootVersion}"
	testImplementation "org.springframework.boot:spring-boot-starter-test:${springBootVersion}"
	implementation "mysql:mysql-connector-java:${mySqlConnectorVersion}"


	runtimeOnly "mysql:mysql-connector-java:${mySqlConnectorVersion}"

	implementation "org.mapstruct:mapstruct:${mapstructVersion}"
	compileOnly "org.projectlombok:lombok:${lombokVersion}"
	annotationProcessor "org.projectlombok:lombok-mapstruct-binding:${lombokMapstructBindingVersion}"
	annotationProcessor "org.mapstruct:mapstruct-processor:${mapstructVersion}"
	annotationProcessor "org.projectlombok:lombok:${lombokVersion}"

	// https://mvnrepository.com/artifact/org.springframework.boot/spring-boot-starter-security
	implementation("org.springframework.boot:spring-boot-starter-security:${springBootVersion}")
	implementation("io.jsonwebtoken:jjwt-api:${jjwtApiVersion}")

	runtimeOnly "io.jsonwebtoken:jjwt-impl:${jjwtApiVersion}"
	runtimeOnly "io.jsonwebtoken:jjwt-jackson:${jjwtApiVersion}"

	implementation("org.springframework.cloud:spring-cloud-starter-openfeign:${feignVersion}")

	implementation("org.springdoc:springdoc-openapi-starter-webmvc-ui:${openApiVersion}")
}

tasks.named('test') {
	useJUnitPlatform()
}

test {
	finalizedBy jacocoTestReport
}

jacocoTestReport {
	reports {
		xml.required.set(true)
		html.required.set(true)
	}
	afterEvaluate {
		classDirectories = files(classDirectories.files.collect {
			fileTree(dir: it,
					exclude: ['**/*Config.*',
							  '**/*Configuration.*',
							  '**/entity/**/*',
							  '**/security/service/**/*',
							  '**/*Application.*',
							  '**/*Constants.*',
							  '**/*Mapper.*',
							  '**/*MapperImpl.*'])
		})
	}
}